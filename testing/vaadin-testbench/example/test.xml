<?xml version="1.0"?>

<project name="Example Testing Script" basedir="." default="run-and-clean-up">

	<!-- Host running TestBench RC or TestBench Hub -->
	<property name="com.vaadin.testbench.tester.host" value="127.0.0.1" />

	<!-- Base url where the testable application is deployed -->
	<property name="com.vaadin.testbench.deployment.url" value="http://demo.vaadin.com/" />

	<!-- Browsers to use for testing -->
	<!--<property name="browsers" value="winxp-ie6,winxp-ie7,winxp-ie8,winxp-firefox3,winxp-safari4,winxp-opera10,winxp-googlechrome4" />-->
	<property name="browsers" value="winxp-ie8,winxp-firefox3" />

	<!-- Temporary output directory, created and removed by this script -->
	<property name="temp-dir" value="temp-dir" />

	<!-- Base directory for screenshots. References are stored in reference/, errors in error/ -->
	<property name="com.vaadin.testbench.screenshot.directory" value="screenshots" />
	
	<!-- If softfail is true the test will not brak due to a screenshot being fault and will fail only at end of test. -->
	<property name="com.vaadin.testbench.screenshot.softfail" value="true" />
	
	<!-- classpath must include test bench jar and its dependencies -->
	<path id="classpath">
		<fileset dir=".." includes="vaadin-testbench-*.jar" />

		<!-- For development environment compatibility only -->
		<path location="../bin" />
	</path>

	<!-- fileset containing all tests to run -->
	<fileset dir="testscripts" id="html-test-files">
		<include name="*.html" />
	</fileset>

	<!-- This target converts HTML tests files to java junit tests. One java file for each test is created. -->
	<target name="create-tests">
		<fileset id="tests">
			<include />
		</fileset>
		<pathconvert pathsep=" " property="testfiles" refid="html-test-files">
			<regexpmapper from="^(.*)$$" to="'\1'" />
		</pathconvert>

		<echo>Using test scripts: ${testfiles}</echo>
		<java classname="com.vaadin.testbench.util.TestConverter" classpathref="classpath" failonerror="true">
			<sysproperty key="com.vaadin.testbench.screenshot.onfail" value="false"/>
			<!-- Uncomment below sysproperty to run test with different value parameter.	-->
			<!-- Wanted parameters for each test should be in the same file.				-->
			<!-- <sysproperty key="com.vaadin.testbench.converter.parameterFile" value="parameters/NewParameters.properties" /> -->
			<arg value="${temp-dir}/src" />
			<arg value="${browsers}" />
			<arg line="${testfiles}" />
		</java>
	</target>

	<!-- Remove old error screenshots. -->
	<target name="remove-error-screens">
		<delete dir="${com.vaadin.testbench.screenshot.directory}/errors" failonerror="false"/>
		<mkdir dir="${com.vaadin.testbench.screenshot.directory}/errors" />
	</target>


	<!-- This target complies the generated java junit tests. -->
	<target name="compile-tests" depends="create-tests">
		<mkdir dir="${temp-dir}" />
		<mkdir dir="${temp-dir}/src" />
		<mkdir dir="${temp-dir}/classes" />
		<javac srcdir="${temp-dir}/src" destdir="${temp-dir}/classes" debug="on" encoding="utf-8">
			<classpath>
				<path refid="classpath" />
			</classpath>
		</javac>
	</target>


	<!-- This target runs the generated and compiled junit tests -->
	<target name="run-tests" depends="compile-tests, remove-error-screens">
		<junit fork="yes">
			<classpath>
				<path refid="classpath" />
				<pathelement path="${temp-dir}/classes" />
			</classpath>

			<formatter type="brief" usefile="false" />
				
			<jvmarg value="-Dcom.vaadin.testbench.tester.host=${com.vaadin.testbench.tester.host}" />
			<jvmarg value="-Dcom.vaadin.testbench.deployment.url=${com.vaadin.testbench.deployment.url}" />
			<jvmarg value="-Dcom.vaadin.testbench.screenshot.directory=${com.vaadin.testbench.screenshot.directory}" />
			
			<jvmarg value="-Dcom.vaadin.testbench.screenshot.softfail=${com.vaadin.testbench.screenshot.softfail}" />
			<!-- To request screenshots of a predefined size uncomment the jvmarg and set the wanted resolution -->
			<!-- <jvmarg value="-Dcom.vaadin.testbench.screenshot.resolution=600x400" /> -->
			
			<batchtest>
				<fileset dir="${temp-dir}/src">
					<include name="**/**.java" />
				</fileset>
			</batchtest>
		</junit>

	</target>

	<!-- Remove temporary source and compiled java files -->
	<target name="remove-temp-files">
		<delete dir="${temp-dir}"/>
	</target>

	<target name="run-and-clean-up" depends="run-tests, remove-temp-files">
	</target>
</project>
