<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  Copyright (C) 2010-2015 Modeling Virtual Environments and Simulation
  (MOVES) Institute at the Naval Postgraduate School (NPS)
  http://www.MovesInstitute.org and http://www.nps.edu
 
  This file is part of Mmowgli.
  
  Mmowgli is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  any later version.

  Mmowgli is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with Mmowgli in the form of a file named COPYING.  If not,
  see <http://www.gnu.org/licenses/>
-->

<web-app id="WebApp_ID" version="3.0"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<display-name>mmowgli default</display-name>

	<context-param>
		<description>Vaadin production mode</description>
		<param-name>productionMode</param-name>		
		<param-value>false</param-value><!-- Places VAADIN is debug mode with 'false' -->
	</context-param>
    <session-config>
		<!-- 15 minute user inactivity timeout by default; must be longer than 
			default vaadin heartbeat of 5 minutes --> 
	    <session-timeout>15</session-timeout>
		<tracking-mode>COOKIE</tracking-mode>
	</session-config>
    <context-param>
      <param-name>heartbeatInterval</param-name>
      <param-value>120</param-value> <!-- seconds -->
    </context-param>

    <!-- commonly changed default values:
        deployment name = mmowgli
    	database name = mmowgli
    	database user name = mmowgli
    	database user password = gwtservelet 
        database url = jdbc:mysql://<DonM>:3306
        pii database same as non-pii database
    -->
	<!-- ********************************************************************************************** -->
	<context-param>
		<description>Short name used to build filesystem paths</description>
		<param-name>deployment</param-name>
		<param-value>mmowgli</param-value>
	</context-param>
	<context-param>
		<description>The db within the mysql server</description>
		<param-name>dbName</param-name>
		<param-value>mmowgli</param-value>
	</context-param>
	<context-param>
		<description>IP location of mmowgli mysql server</description>
		<param-name>dbUrl</param-name>
		<param-value>jdbc:mysql://web4:3306/</param-value>
	</context-param>
	<context-param>
		<description>User account for access by the app code to the mysql server</description>
		<param-name>dbUser</param-name>
		<param-value>mmowgli</param-value>
	</context-param>
	<context-param>
		<description>Password for application user account on mysql server</description>
		<param-name>dbPassword</param-name>
		<param-value>gwtservelet</param-value>
	</context-param>
	<!-- begin pii -->
	<context-param>
		<description>The db within the mysql server for the pii classes (here we're using the same db)</description>
		<param-name>piiDbName</param-name>
		<param-value>mmowgli</param-value>
	</context-param>
	<!-- end pii -->

	<!-- performance tuning -->
	<!-- ********************************************************************************************** -->
	<context-param>
		<description>production 200, archive 20</description>
		<param-name>c3p0MaxSize</param-name>
		<param-value>200</param-value>
	</context-param>
	<context-param>
		<description>production 20, archive 5</description>
		<param-name>c3p0MinSize</param-name>
		<param-value>20</param-value>
	</context-param>
	<context-param>
		<description>production 10, archive 5</description>
		<param-name>c3p0AcquireIncrement</param-name>
		<param-value>10</param-value>
	</context-param>
	<context-param>
		<description>in seconds</description>
		<param-name>c3p0Timeout</param-name>
		<param-value>3600</param-value>
	</context-param>
	<context-param>
		<description>in seconds</description>
		<param-name>c3p0IdleTestPeriod</param-name>
		<param-value>1800</param-value>
	</context-param>

	<context-param>
		<description>Where on the local machine the hibernate-lucene indices are put</description>
		<param-name>hibernateSearchIndexPath</param-name>
		<param-value>/tmp/mmowgliLucene</param-value>
	</context-param>
	
    <!-- In a clustered environment, one tomcat is the "Master".  To use the "best" method, Apache Zookeeper, set the following appropriately -->
    <!-- To use other methods, see MmowgliConstants and ClusterMasterController.java -->
	<context-param>
		<param-name>clusterMasterArbiter</param-name>
        <param-value>ZookeeperLeaderElection</param-value> <!-- class which selects cluster manager node, alternatives: ZookeeperLeaderElection, SharedFileLockGetter, SingleDeployment, WebXmlParameterReader -->
    </context-param>
    <context-param>
     	<param-name>zookeeperSocket</param-name>
     	 <param-value>web4:2181</param-value> <!--parameter for ZookeeperLeaderElection-->
    </context-param>

    <!-- Mmowgli is dependent on an smtp server to send email -->
	<context-param>
		<description>Where mmowgli sends emails to be delivered</description>
		<param-name>smtpHost</param-name>
		<param-value>mule.nps.edu</param-value>
	</context-param>

	<!-- Inter-cluster messaging -->
	<!-- *********************** -->
	<context-param>
        <!-- Defines the Java Message System (JMS) URL connection. By default this 
		runs on web4 (web3 for test) in the private cluster, on tcp port 61616, the default for activemq. -->
		<description>JMS URL</description>
		<param-name>jmsUrl</param-name>
		<param-value>tcp://web4:61616?wireFormat.maxInactivityDuration=0</param-value>
	</context-param>
	<context-param>
		<!-- Defines the Java Message System (JMS) topic. This is the "subject" 
			that this application publishes to and subscribes to on the broker for exchanging 
			messages between tomcat servers. -->
		<description>JMS Topic</description>
		<param-name>jmsTopic</param-name>
		<param-value>mmowgli</param-value>
	</context-param>
	<context-param>
		<description>Time between keep-alive polls in millisecs</description>
		<param-name>jmsKeepAliveIntervalMS</param-name>
		<param-value>300000</param-value> <!-- 5 minutes = 1000*60*5 -->
	</context-param>

	<!-- Media (image) locations -->
	<!-- *********************** -->
	<!-- specifying tokens used later in this file -->
	<context-param>
		<description>Token specifying insertion of deployment string</description>
		<param-name>deploymentToken</param-name>
		<param-value>{{DEPLOY}}</param-value>  <!-- this means use the "deployment" context parameter above -->
	</context-param>
	<context-param>
		<description>Token specifying insertion of base game url</description>
		<param-name>gameUrlToken</param-name>
		<param-value>{{GAMEURL}}</param-value>
	</context-param>
	
	<!-- locations, in local filesystem and as urls, built from the tokens above -->
	<context-param>
		<description>Where the game images reside, normally same place game css files point to</description>
		<param-name>gameImagesUrl</param-name>
		<param-value>https://web.mmowgli.nps.edu/mmowMedia/images/</param-value> <!-- deprecated -->
	</context-param>
	<context-param>
		<description>File system path on server where uploaded images sit</description>
		<param-name>userImagesPath</param-name>
		<param-value>/mmowgli/shared/images/{{DEPLOY}}/</param-value>
	</context-param>
	<context-param>
		<description>Url pointing to the uploaded images repository</description>
		<param-name>userImagesUrl</param-name>
		<param-value>{{GAMEURL}}/images/</param-value>  <!-- game url will never end with / -->
	</context-param>
	<context-param>
		<description>File system path on server where uploaded reports sit</description>
		<param-name>gameReportsPath</param-name>
		<param-value>/mmowgli/shared/images/reports/{{DEPLOY}}/</param-value>
	</context-param>
	<context-param>
		<description>Url pointing to the uploaded reports repository</description>
		<param-name>gameReportsUrl</param-name>
		<param-value>{{GAMEURL}}/reports/</param-value>
	</context-param>
	<context-param>
		<description>The prefix added to image names to form the relative url in an action plan</description>
		<param-name>reports2ImagesPrefix</param-name>
		<param-value>../images/</param-value>
	</context-param>

	<!-- Media virus scanner, further arguments can be 'clamScanArgument1', 
		'clamScanArgument2', etc. -->
	<!-- Cmd to OS will be 'clamScanPath [clamScanArgument] [clamScanArgument1 
		[clamScanArgument2...]] filename' -->
	<!-- ****************** -->
	<context-param>
		<description>path to clamscan virus checker (optional)</description>
		<param-name>clamScanPath</param-name>
		<param-value>clamdscan</param-value>
	</context-param>
	<context-param>
		<description>The prefix added to image names to form the relative url in an action plan</description>
		<param-name>clamScanArgument</param-name>
		<param-value>--no-summary</param-value>
	</context-param>
	
	<context-param> <!--  not readable by my code as servlet init-param, not handled by vaadin as an annotation would be, put it here -->
	    <!--  but reading this by code, then putting it into the pushconfiguration dynamically doesn't seem to do anything.  -->
		<param-name>transport</param-name>
		<param-value>long-polling</param-value>
	</context-param>
	
	<servlet>
		<servlet-name>Mmowgli2</servlet-name>
		<servlet-class>edu.nps.moves.mmowgli.Mmowgli2VaadinServlet</servlet-class>
	<!--<init-param>  removing this keeps the protection in place
			<param-name>disable-xsrf-protection</param-name>
			<param-value>true</param-value>
		</init-param> -->
		<init-param> <!--  not readable by my code and not handled by vaadin as an annotation would be, so put into context-param -->
			<param-name>transport</param-name>
			<param-value>streaming</param-value>
		</init-param>
	</servlet>

	<listener>
		<!-- required for Vaadin 7 push -->
		<listener-class>org.atmosphere.cpr.SessionSupport</listener-class>
	</listener>

	<!--  makes use of javamelody, a utility that allows tomcat container monitoring. -->
	<!-- *************************************************************************** -->
	<filter>
		<filter-name>monitoring</filter-name>
		<filter-class>net.bull.javamelody.MonitoringFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	
	<filter-mapping>
		<filter-name>monitoring</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<listener>
		<listener-class>net.bull.javamelody.SessionListener</listener-class>
	</listener>

	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>Monitoring</realm-name>
	</login-config>
	
	<security-role>
		<role-name>monitoring</role-name>
	</security-role>
	
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Monitoring</web-resource-name>
			<url-pattern>/monitoring</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>monitoring</role-name>
		</auth-constraint>
		<!-- if SSL enabled (SSL and certificate must then be configured in the 
			server) <user-data-constraint> <transport-guarantee>CONFIDENTIAL</transport-guarantee> 
			</user-data-constraint> -->
	</security-constraint>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>
</web-app>