# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # "vagrant box add puppetlabs/centos-6.6-64-puppet" to add the vm image
  # to the list of images vagrant knows about. This will download the 
  # image from the vagrant catalog. (You may need a url if not in the
  # catalog)

  # front end web server

  config.vm.define "mmowgli" do |mmowgli|
    mmowgli.vm.box = "puppetlabs/centos-6.6-64-puppet"
    mmowgli.vm.hostname = "mmowgli"
  end

  # database, zookeeper, JMS server

#  config.vm.define "mmowgliServer" do |mmowgliServer|
#    mmowgliServer.vm.box = "puppetlabs/centos-6.6-64-puppet"
#    mmowgliServer.vm.hostname = "mmowgliServer"
#  end

  # one of N tomcat servers that can be loadbalanced across. 
  # Add the list of tomcat servers to the tomcats list in
  # hiera.

#  config.vm.define "tomcat1" do |tomcat1|
#    tomcat1.vm.box = "puppetlabs/centos-6.6-64-puppet"
#    tomcat1.vm.hostname = "tomcat1"
#  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  #
  # This bootstraps up some puppet stuff so we can run the actual puppet
  # manifeshts. Do some intial config with the shell, then use puppet
  # after that.

   config.vm.provision "shell", inline: <<-SHELL

     # puppet and hiera config files

     cp /vagrant/puppetConfig/hiera.yaml /etc/puppet
     cp -R /vagrant/puppetConfig/hieradata /etc/puppet
     cp /vagrant/puppetConfig/puppet.conf /etc/puppet
    
     # baseline puppet modules. Note that you need to be connected to the internet
     # to retreive these.

     /usr/bin/puppet module install puppetlabs/apache
     /usr/bin/puppet module install puppetlabs/mysql
     /usr/bin/puppet module install  puppetlabs/stdlib
     /usr/bin/puppet module install thias/samba
     /usr/bin/puppet module install puppetlabs/firewall

     puppet apply --modulepath /etc/puppet/modules:/vagrant/manifests/modules /vagrant/manifests/site.pp
   SHELL
end
