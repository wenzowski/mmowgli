/*
* Copyright (c) 1995-2014 held by the author(s).  All rights reserved.
*  
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions
* are met:
*  
*  * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*  * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer
*       in the documentation and/or other materials provided with the
*       distribution.
*  * Neither the names of the Naval Postgraduate School (NPS)
*       Modeling Virtual Environments and Simulation (MOVES) Institute
*       (http://www.nps.edu and http://www.MovesInstitute.org)
*       nor the names of its contributors may be used to endorse or
*       promote products derived from this software without specific
*       prior written permission.
*  
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
* "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
* LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
* FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
* COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
* BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
* LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
* ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
* POSSIBILITY OF SUCH DAMAGE.
*/
package edu.nps.moves.mmowgli.db.pii;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;

import org.hibernate.annotations.Parameter;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.TypeDef;
import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Indexed;
import org.jasypt.hibernate4.type.EncryptedStringType;

/** Used for jasypt encryption of fields */

@TypeDef(
    name = "encryptedString",
    typeClass = EncryptedStringType.class,
    parameters = { @Parameter(name = "encryptorRegisteredName", value = "propertiesFileHibernateStringEncryptor") })
/**
 * User persistent class.
 * 
 * @author DMcG
 * 
 *         This is a database table, listing registered users
 * 
 *         Modified on Dec 16, 2010
 * 
 *         MOVES Institute Naval Postgraduate School, Monterey, CA, USA www.nps.edu
 * 
 * @author Mike Bailey, jmbailey@nps.edu
 * @version $Id$
 */
@Entity()
@Indexed(index = "mmowgli")
public class UserPii implements Serializable
{
  private static final long serialVersionUID = -7051174328195521072L;

  // @formatter:off
  // Database column names
  public static String USER_ID_COL              = "id";
  public static String USER_USERNAME_COL        = "userName";
  public static String USER_FIRSTNAME_COL       = "realFirstName";
  public static String USER_LASTNAME_COL        = "realLastName";
  public static String USER_EMAIL_COL           = "emailAddresses";
  public static String USER_EXPERTISE_COL       = "expertise";
  public static String USER_LOCATION_COL        = "location";
  public static String USER_PASSWORD_COL        = "password";
  public static String USER_GAMEMASTER_COL      = "gameMaster";
  public static String USER_LOCKEDOUT_COL       = "accountDisabled";
  public static String USER_ADMINISTRATOR_COL   = "administrator";
  public static String USER_TWEETER_COL         = "tweeter";
  public static String USER_BASICSCORE_COL      = "basicScore";
  public static String USER_INNOVATIONSCORE_COL = "innovationScore";


  long id; // Primary key, autogenerated
  String realFirstName;
  String realLastName;
  String password; // Encrypted user password
  String twitterId;
  String facebookId;
  String linkedInId;
  List<EmailPii> emailAddresses = new ArrayList<EmailPii>(); // one or more email addresses

  long userObjectId;

  /** No-args constructor, used by hibernate */
  public UserPii()
  {
  }
 
  @Id
  @DocumentId
  @GeneratedValue(strategy = GenerationType.AUTO)
  @Field(analyze=Analyze.NO) //index = Index.UN_TOKENIZED)
  public long getId()
  {
    return id;
  }

  public void setId(long id)
  {
    this.id = id;
  }
  
  @Basic
  public long getUserObjectId()
  {
    return userObjectId;
  }
  
  public void setUserObjectId(long uoid)
  {
    userObjectId = uoid;
  }
 
  @Type(type = "encryptedString")
  public String getRealFirstName()
  {
    return realFirstName;
  }

  public void setRealFirstName(String realFirstName)
  {
    this.realFirstName = realFirstName;
  }

  @Type(type = "encryptedString")
  public String getRealLastName()
  {
    return realLastName;
  }

  public void setRealLastName(String realLastName)
  {
    this.realLastName = realLastName;
  }

  @Type(type = "encryptedString")
  public String getPassword()
  {
    return password;
  }

  public void setPassword(String password)
  {
    this.password = password;
  }

  @Type(type = "encryptedString")
  public String getTwitterId()
  {
    return twitterId;
  }

  public void setTwitterId(String twitterId)
  {
    this.twitterId = twitterId;
  }

  @Type(type = "encryptedString")
  public String getFacebookId()
  {
    return facebookId;
  }

  public void setFacebookId(String facebookId)
  {
    this.facebookId = facebookId;
  }

  @Type(type = "encryptedString")
  public String getLinkedInId()
  {
    return linkedInId;
  }

  public void setLinkedInId(String linkedInId)
  {
    this.linkedInId = linkedInId;
  }

  /**
   * This user can have many email addressess
   */
  @OneToMany(cascade = CascadeType.ALL)
  public List<EmailPii> getEmailAddresses()
  {
    return emailAddresses;
  }

  public void setEmailAddresses(List<EmailPii> emailAddresses)
  {
    this.emailAddresses = emailAddresses;
  }


}
